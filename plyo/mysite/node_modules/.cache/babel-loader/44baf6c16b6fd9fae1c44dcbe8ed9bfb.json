{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jane_c24/Documents/Projects/plyo/frontend/src/Timer.js\",\n    _s = $RefreshSig$();\n\nimport TimerDisplay from './TimerDisplay';\nimport TimerButton from './TimerButton';\nimport { useState } from 'react';\n\nconst Timer = () => {\n  _s();\n\n  const [time, setTime] = useState({\n    ms: 0,\n    s: 0,\n    m: 0,\n    h: 0\n  });\n\n  const start = () => {\n    run();\n    setInterval(run, 10);\n  };\n\n  var updatedMs = time.ms;\n  var updatedS = time.s;\n  var updatedM = time.m;\n  var updatedH = time.h;\n\n  const run = () => {\n    if (updatedM === 60) {\n      updatedH++;\n      updatedM = 0;\n    }\n\n    if (updatedS === 60) {\n      updatedM++;\n      updatedS = 0;\n    }\n\n    if (updatedMs === 100) {\n      updatedS++;\n      updatedMs = 0;\n    }\n\n    updatedMs++;\n    return setTime({\n      ms: updatedMs,\n      s: updatedS,\n      m: updatedM,\n      h: updatedH\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-holder\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Timer Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimerDisplay, {\n      time: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimerButton, {\n      start: start,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Timer, \"TK35QbNK5L+T3AiJtLr0maSBPj4=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/jane_c24/Documents/Projects/plyo/frontend/src/Timer.js"],"names":["TimerDisplay","TimerButton","useState","Timer","time","setTime","ms","s","m","h","start","run","setInterval","updatedMs","updatedS","updatedM","updatedH"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC;AAACI,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE,CAAX;AAAcC,IAAAA,CAAC,EAAC,CAAhB;AAAmBC,IAAAA,CAAC,EAAC;AAArB,GAAD,CAAhC;;AAEA,QAAMC,KAAK,GAAG,MAAM;AAChBC,IAAAA,GAAG;AACHC,IAAAA,WAAW,CAACD,GAAD,EAAM,EAAN,CAAX;AACH,GAHD;;AAKA,MAAIE,SAAS,GAAGT,IAAI,CAACE,EAArB;AACA,MAAIQ,QAAQ,GAAGV,IAAI,CAACG,CAApB;AACA,MAAIQ,QAAQ,GAAGX,IAAI,CAACI,CAApB;AACA,MAAIQ,QAAQ,GAAGZ,IAAI,CAACK,CAApB;;AAEA,QAAME,GAAG,GAAG,MAAM;AACd,QAAII,QAAQ,KAAK,EAAjB,EAAoB;AAChBC,MAAAA,QAAQ;AACRD,MAAAA,QAAQ,GAAG,CAAX;AACH;;AACD,QAAID,QAAQ,KAAK,EAAjB,EAAoB;AAChBC,MAAAA,QAAQ;AACRD,MAAAA,QAAQ,GAAG,CAAX;AACH;;AACD,QAAID,SAAS,KAAK,GAAlB,EAAsB;AAClBC,MAAAA,QAAQ;AACRD,MAAAA,SAAS,GAAG,CAAZ;AACH;;AACDA,IAAAA,SAAS;AACT,WAAOR,OAAO,CAAC;AAACC,MAAAA,EAAE,EAAEO,SAAL;AAAgBN,MAAAA,CAAC,EAAEO,QAAnB;AAA6BN,MAAAA,CAAC,EAACO,QAA/B;AAAyCN,MAAAA,CAAC,EAACO;AAA3C,KAAD,CAAd;AACH,GAfD;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAG,cAAjB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEZ;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CArCD;;GAAMP,K;;KAAAA,K;AAuCN,eAAeA,KAAf","sourcesContent":["import TimerDisplay from './TimerDisplay'\nimport TimerButton from './TimerButton'\nimport {useState} from 'react';\n\n\nconst Timer = () => {\n    const [time, setTime] = useState({ms: 0, s: 0, m:0, h:0});\n\n    const start = () => {\n        run();\n        setInterval(run, 10);\n    }\n\n    var updatedMs = time.ms\n    var updatedS = time.s\n    var updatedM = time.m\n    var updatedH = time.h\n    \n    const run = () => {\n        if (updatedM === 60){\n            updatedH++;\n            updatedM = 0;\n        }\n        if (updatedS === 60){\n            updatedM++;\n            updatedS = 0;\n        }\n        if (updatedMs === 100){\n            updatedS++;\n            updatedMs = 0;\n        }\n        updatedMs ++;\n        return setTime({ms: updatedMs, s: updatedS, m:updatedM, h:updatedH});\n    }   \n\n    return (\n        <div className = \"timer-holder\">\n            <h1> Timer Here</h1>         \n            <TimerDisplay time={time}></TimerDisplay>\n            <TimerButton start={start} > </TimerButton>\n        </div> \n    )\n}\n\nexport default Timer"]},"metadata":{},"sourceType":"module"}