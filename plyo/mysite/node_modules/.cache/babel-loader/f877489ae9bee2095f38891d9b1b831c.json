{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jane_c24/Documents/Projects/plyo/frontend/src/ExerciseDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Exercises from './Exercises';\nimport Stopwatch from './Stopwatch';\nimport Timer from './Timer';\nimport photo1 from './jumpingJacks.gif';\nimport photo2 from './jumpSquat.gif';\nimport { useEffect } from 'react';\n\nconst ExerciseDisplay = ({\n  time,\n  focus,\n  level\n}) => {\n  _s();\n\n  const [exercises, setExercises] = useState(null);\n  const exerciseBank = [//{name: \"Jumping Jacks\", reprange: 15, photo: photo1, id:1, focus: \"cardio\", level: 1 }, \n  //{name: \"Jump Squat\", reprange: 10, photo: photo2, id: 2, focus: \"legs\", level: 3 },\n  //{name: \"Pushups\", reprange: 10, id: 3, focus: \"upper\", level: 2}, \n  //{name: \"Explosive Situps\", reprange: 20, id: 4, focus: \"abs\", level: 2},\n  //{name: \"Burpees\", reprange: 15, photo: photo1, id:5, focus: \"cardio\", level: 3 }, \n  //{name: \"Lunges\", reprange: 10, photo: photo2, id: 6, focus: \"legs\", level: 1},\n  //{name: \"Commandos\", reprange: 10, id: 7, focus: \"upper\", level: 3}, \n  //{name: \"Plank\", reprange: 20, id: 8, focus: \"abs\", level: 1},\n  //{name: \"High Knees\", reprange: 15, photo: photo1, id:9, focus: \"cardio\" , level:3}, \n  //{name: \"Jump Lunges\", reprange: 10, photo: photo2, id: 10, focus: \"legs\", level: 3},\n  {\n    name: \"Downward Dog to Pushups\",\n    reprange: 10,\n    id: 11,\n    focus: \"upper\",\n    level: 3\n  }, {\n    name: \"Leg Raises\",\n    reprange: 20,\n    id: 12,\n    focus: \"abs\",\n    level: 1\n  }, {\n    name: \"Skaters\",\n    reprange: 15,\n    photo: photo1,\n    id: 13,\n    focus: \"cardio\",\n    level: 1\n  }, {\n    name: \"Step Ups\",\n    reprange: 10,\n    photo: photo2,\n    id: 14,\n    focus: \"legs\",\n    level: 1\n  }, {\n    name: \"PullUps\",\n    reprange: 10,\n    id: 15,\n    focus: \"upper\",\n    level: 3\n  }, {\n    name: \"Crunches\",\n    reprange: 20,\n    id: 16,\n    focus: \"abs\",\n    level: 1\n  }, {\n    name: \"Squats\",\n    reprange: 10,\n    photo: photo2,\n    id: 17,\n    focus: \"legs\",\n    level: 1\n  }, {\n    name: \"Lateral Leg Raises\",\n    reprange: 10,\n    photo: photo2,\n    id: 18,\n    focus: \"legs\",\n    level: 1\n  }, {\n    name: \"Glute Bridges\",\n    reprange: 10,\n    photo: photo2,\n    id: 19,\n    focus: \"legs\",\n    level: 1\n  }, {\n    name: \"Single Leg Glute Bridges\",\n    reprange: 10,\n    photo: photo2,\n    id: 20,\n    focus: \"legs\",\n    level: 2\n  }, //{name: \"Mountain Climbers\", reprange: 10, photo: photo2, id: 21, focus: \"cardio\", level:2},\n  {\n    name: \"Donkey Kicks\",\n    reprange: 10,\n    photo: photo2,\n    id: 22,\n    focus: \"cardio\",\n    level: 1\n  }]; //called when the timer reaches 0 -> deletes the first exercise once completed, changes exercise state \n\n  const handleDelete = id => {\n    console.log(id);\n\n    if (id != null) {\n      const newExercises = exercises.filter(exercise => exercise.id != id);\n      setExercises(newExercises);\n    } else {}\n  };\n\n  const [startTime, setStartTime] = useState([{\n    time: 45,\n    id: 1\n  }, {\n    time: 45,\n    id: 2\n  }, {\n    time: 45,\n    id: 3\n  }]); //const [time1, setTime1] = useState(time)\n  //fetch data from backend\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/workout/').then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      setExercises(data);\n    });\n  }, []); //onload, exercises are not displayed\n\n  const [showResults, setShowResults] = useState(false); //once submit button is changed, exercises are loaded up based on given values\n\n  const changeDisplay = (time, level, focus) => {\n    console.log(\"Changing exercise list to: \" + time + level + focus); //first button click reveals this group of components \n\n    setShowResults(true);\n    focusID = null;\n\n    if (focus === abs) {\n      focusID = 1;\n    }\n\n    if (focus === cardio) {\n      focusID = 2;\n    }\n\n    if (focus === legs) {\n      focusID = 3;\n    }\n\n    if (focus === upper) {\n      focusID = 4;\n    }\n\n    if (focus != 'fullBody') {\n      var newExerciseBank = exercises.filter(exercise => exercise.focus === focusID);\n      newExerciseBank = exercises.filter(exercise => exercise.level <= level);\n    } else {\n      var newExerciseBank = exercises;\n    }\n\n    let newExercises = [];\n    let added = new Map();\n\n    for (let i = 0; i < time; i++) {\n      let random = Math.floor(Math.random() * newExerciseBank.length);\n\n      if (newExerciseBank.length > time) {\n        while (added[random] === 1) {\n          random = Math.floor(Math.random() * newExerciseBank.length);\n        }\n      }\n\n      newExercises.push(newExerciseBank[random]);\n      added[random] = 1;\n    }\n\n    console.log(newExercises);\n    setExercises(newExercises);\n  };\n\n  if (exercises != null) {\n    if (exercises.length > 0) {\n      var id = exercises[0].id;\n    } else {\n      var id = null;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changeDisplay(time, level, focus),\n      style: {\n        marginLeft: '45%'\n      },\n      children: \" Let's Go!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", showResults ? /*#__PURE__*/_jsxDEV(Stopwatch, {\n        startTime: startTime,\n        id: id,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 34\n      }, this) : null, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", showResults ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Time: \", time, \" Focus: \", focus, \" Level: \", level]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 34\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), exercises && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", showResults ? /*#__PURE__*/_jsxDEV(Exercises, {\n        Exercises: exercises,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 47\n      }, this) : null, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExerciseDisplay, \"CpDsP05Y6u4vZl5RglNHmtd+qpQ=\");\n\n_c = ExerciseDisplay;\nexport default ExerciseDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseDisplay\");","map":{"version":3,"sources":["/Users/jane_c24/Documents/Projects/plyo/frontend/src/ExerciseDisplay.js"],"names":["useState","Exercises","Stopwatch","Timer","photo1","photo2","useEffect","ExerciseDisplay","time","focus","level","exercises","setExercises","exerciseBank","name","reprange","id","photo","handleDelete","console","log","newExercises","filter","exercise","startTime","setStartTime","fetch","then","res","json","data","showResults","setShowResults","changeDisplay","focusID","abs","cardio","legs","upper","newExerciseBank","added","Map","i","random","Math","floor","length","push","marginLeft"],"mappings":"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","sourcesContent":["import {useState} from 'react';\nimport Exercises from './Exercises';\nimport Stopwatch from './Stopwatch';\nimport Timer from './Timer';\nimport photo1 from './jumpingJacks.gif'\nimport photo2 from './jumpSquat.gif'\nimport {useEffect} from 'react'\n\nconst ExerciseDisplay = ({time, focus, level}) => {\n    const [exercises, setExercises] = useState(null)\n\n    const exerciseBank = [\n        //{name: \"Jumping Jacks\", reprange: 15, photo: photo1, id:1, focus: \"cardio\", level: 1 }, \n        //{name: \"Jump Squat\", reprange: 10, photo: photo2, id: 2, focus: \"legs\", level: 3 },\n        //{name: \"Pushups\", reprange: 10, id: 3, focus: \"upper\", level: 2}, \n        //{name: \"Explosive Situps\", reprange: 20, id: 4, focus: \"abs\", level: 2},\n        //{name: \"Burpees\", reprange: 15, photo: photo1, id:5, focus: \"cardio\", level: 3 }, \n        //{name: \"Lunges\", reprange: 10, photo: photo2, id: 6, focus: \"legs\", level: 1},\n        //{name: \"Commandos\", reprange: 10, id: 7, focus: \"upper\", level: 3}, \n        //{name: \"Plank\", reprange: 20, id: 8, focus: \"abs\", level: 1},\n        //{name: \"High Knees\", reprange: 15, photo: photo1, id:9, focus: \"cardio\" , level:3}, \n        //{name: \"Jump Lunges\", reprange: 10, photo: photo2, id: 10, focus: \"legs\", level: 3},\n        {name: \"Downward Dog to Pushups\", reprange: 10, id: 11, focus: \"upper\", level: 3}, \n        {name: \"Leg Raises\", reprange: 20, id: 12, focus: \"abs\", level: 1},\n        {name: \"Skaters\", reprange: 15, photo: photo1, id:13, focus: \"cardio\" , level:1}, \n        {name: \"Step Ups\", reprange: 10, photo: photo2, id: 14, focus: \"legs\", level:1},\n        {name: \"PullUps\", reprange: 10, id: 15, focus: \"upper\", level:3}, \n        {name: \"Crunches\", reprange: 20, id: 16, focus: \"abs\", level:1},\n        {name: \"Squats\", reprange: 10, photo: photo2, id: 17, focus: \"legs\", level:1},\n        {name: \"Lateral Leg Raises\", reprange: 10, photo: photo2, id: 18, focus: \"legs\", level:1},\n        {name: \"Glute Bridges\", reprange: 10, photo: photo2, id: 19, focus: \"legs\", level:1},\n        {name: \"Single Leg Glute Bridges\", reprange: 10, photo: photo2, id: 20, focus: \"legs\", level:2},\n        //{name: \"Mountain Climbers\", reprange: 10, photo: photo2, id: 21, focus: \"cardio\", level:2},\n        {name: \"Donkey Kicks\", reprange: 10, photo: photo2, id: 22, focus: \"cardio\", level:1},\n    ]\n\n    //called when the timer reaches 0 -> deletes the first exercise once completed, changes exercise state \n    const handleDelete = (id) => {\n        console.log(id)\n        if (id != null){\n            const newExercises = exercises.filter(exercise => exercise.id != id);\n            setExercises(newExercises);\n        }\n        else{\n\n        }\n    } \n\n    const[startTime, setStartTime] = useState([\n        {time: 45, id: 1},\n        {time: 45, id: 2},\n        {time: 45, id: 3}\n    ])\n\n    //const [time1, setTime1] = useState(time)\n    \n   //fetch data from backend\n   useEffect(()=> {\n       fetch('http://127.0.0.1:8000/api/workout/')\n        .then(res => {\n           return res.json();\n        })\n        .then(data => {\n            console.log(data)\n            setExercises(data)\n        })\n   }, []);\n\n    //onload, exercises are not displayed\n    const [showResults, setShowResults] = useState(false)\n\n    //once submit button is changed, exercises are loaded up based on given values\n    const changeDisplay = (time, level, focus) => {\n        console.log(\"Changing exercise list to: \" + time + level + focus)\n        //first button click reveals this group of components \n        setShowResults(true)\n\n        focusID = null\n        if (focus === abs){\n            focusID = 1\n        }\n        if (focus === cardio){\n            focusID = 2\n        }\n        if (focus === legs){\n            focusID = 3\n        }\n        if (focus === upper){\n            focusID = 4\n        }\n\n        if (focus != 'fullBody'){\n            var newExerciseBank = exercises.filter(exercise => exercise.focus === focusID)\n            newExerciseBank = exercises.filter(exercise => exercise.level <= level)\n        }\n        else{\n            var newExerciseBank = exercises\n        }\n\n        let newExercises = []\n        let added = new Map()\n        for (let i = 0; i<time; i++){\n            let random = Math.floor(Math.random()*newExerciseBank.length)\n            if (newExerciseBank.length > time) {\n                while (added[random] === 1){\n                random =Math.floor(Math.random()*newExerciseBank.length)\n                }\n            }\n            newExercises.push(newExerciseBank[random])\n            added[random] = 1\n            }\n        console.log(newExercises)\n        setExercises(newExercises);\n        \n    }\n\n    if (exercises != null){\n        if (exercises.length > 0){\n            var id = exercises[0].id;\n        }\n        else{\n            var id = null\n        }\n    }\n\n    return(\n        <div>\n            <button onClick={()=> changeDisplay(time, level, focus)} style={{marginLeft: '45%'}}> Let's Go!</button>\n            <div> {showResults ? <Stopwatch startTime = {startTime} id={id} handleDelete={handleDelete} /> : null} </div>\n            <div> {showResults ? <h1> Time: {time} Focus: {focus} Level: {level}</h1> : null}</div>\n            {exercises && <div> {showResults? <Exercises Exercises = {exercises} handleDelete={handleDelete}/> : null} </div>}\n        </div>\n    );\n}\nexport default ExerciseDisplay;"]},"metadata":{},"sourceType":"module"}