{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jane_c24/Documents/Projects/plyo/frontend/src/ExerciseDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Exercises from './Exercises';\nimport Stopwatch from './Stopwatch';\nimport Timer from './Timer';\nimport photo1 from './jumpingJacks.gif';\nimport photo2 from './jumpSquat.gif';\nimport { useEffect } from 'react';\nimport React from 'react';\n\nconst ExerciseDisplay = ({\n  num,\n  focus,\n  level\n}) => {\n  _s();\n\n  const myRef = /*#__PURE__*/React.createRef();\n  const [exercises, setExercises] = useState(null);\n  const [exerciseBank, setExerciseBank] = useState(null); //called when the timer reaches 0 -> deletes the first exercise once completed, changes exercise state \n\n  const handleDelete = id => {\n    console.log(id);\n\n    if (id != null) {\n      const newExercises = exercises.filter(exercise => exercise.id != id);\n      setExercises(newExercises);\n    } else {}\n  };\n\n  const [startTime, setStartTime] = useState([{\n    time: 45,\n    id: 1\n  }, {\n    time: 45,\n    id: 2\n  }, {\n    time: 45,\n    id: 3\n  }]); //const [time1, setTime1] = useState(time)\n  //fetch data from backend\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/workout/').then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      setExerciseBank(data);\n    });\n  }, []); //onload, exercises are not displayed\n\n  const [showResults, setShowResults] = useState(false); //once submit button is changed, exercises are loaded up based on given values\n\n  const changeDisplay = (num, level, focus) => {\n    console.log(\"Changing exercise list to: \" + num + level + focus); //first button click reveals this group of components \n\n    setShowResults(true); //scroll to exercises when button is clicked\n\n    window.scrollTo(0, myRef.current.offsetTop);\n    var focusID = null;\n\n    if (focus === 'upper') {\n      focusID = 1;\n    }\n\n    if (focus === 'legs') {\n      focusID = 2;\n    }\n\n    if (focus === 'cardio') {\n      focusID = 3;\n    }\n\n    if (focus === 'abs') {\n      focusID = 4;\n    }\n\n    console.log(exercises);\n    var newExerciseBank = exerciseBank;\n\n    if (focus != 'fullBody') {\n      newExerciseBank = exerciseBank.filter(exercise => exercise.focus === focusID);\n    }\n\n    console.log(\"newBank1: \", newExerciseBank);\n\n    if (focus != 'abs') {\n      newExerciseBank = newExerciseBank.filter(exercise => exercise.level <= level);\n    }\n\n    console.log(\"newBank2: \", newExerciseBank);\n    let newExercises = [];\n    let added = new Map();\n\n    for (let i = 0; i < num; i++) {\n      let random = Math.floor(Math.random() * newExerciseBank.length);\n\n      if (newExerciseBank.length > time) {\n        while (added[random] === 1) {\n          random = Math.floor(Math.random() * newExerciseBank.length);\n        }\n      }\n\n      newExercises.push(newExerciseBank[random]);\n      added[random] = 1;\n    }\n\n    console.log(newExercises);\n    setExercises(newExercises);\n  };\n\n  if (exercises != null) {\n    if (exercises.length > 0) {\n      var id = exercises[0].id;\n    } else {\n      var id = null;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submitButton\",\n      onClick: () => changeDisplay(num, level, focus),\n      style: {\n        marginLeft: '45%'\n      },\n      children: \" Let's Go!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: myRef,\n      children: [\" \", showResults ? /*#__PURE__*/_jsxDEV(Stopwatch, {\n        startTime: startTime,\n        id: id,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 46\n      }, this) : null, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", showResults ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Num Exercises: \", num, \" Focus: \", focus, \" Level: \", level]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 34\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), exercises && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", showResults ? /*#__PURE__*/_jsxDEV(Exercises, {\n        Exercises: exercises,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 47\n      }, this) : null, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExerciseDisplay, \"qLA+O2/ANSndXdOGHDpohK5PDBo=\");\n\n_c = ExerciseDisplay;\nexport default ExerciseDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseDisplay\");","map":{"version":3,"sources":["/Users/jane_c24/Documents/Projects/plyo/frontend/src/ExerciseDisplay.js"],"names":["useState","Exercises","Stopwatch","Timer","photo1","photo2","useEffect","React","ExerciseDisplay","num","focus","level","myRef","createRef","exercises","setExercises","exerciseBank","setExerciseBank","handleDelete","id","console","log","newExercises","filter","exercise","startTime","setStartTime","time","fetch","then","res","json","data","showResults","setShowResults","changeDisplay","window","scrollTo","current","offsetTop","focusID","newExerciseBank","added","Map","i","random","Math","floor","length","push","marginLeft"],"mappings":"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","sourcesContent":["import {useState} from 'react';\nimport Exercises from './Exercises';\nimport Stopwatch from './Stopwatch';\nimport Timer from './Timer';\nimport photo1 from './jumpingJacks.gif'\nimport photo2 from './jumpSquat.gif'\nimport {useEffect} from 'react'\nimport React from 'react'\n\nconst ExerciseDisplay = ({num, focus, level}) => {\n    const myRef = React.createRef()\n    const [exercises, setExercises] = useState(null)\n    const [exerciseBank, setExerciseBank] = useState(null)\n\n    //called when the timer reaches 0 -> deletes the first exercise once completed, changes exercise state \n    const handleDelete = (id) => {\n        console.log(id)\n        if (id != null){\n            const newExercises = exercises.filter(exercise => exercise.id != id);\n            setExercises(newExercises);\n        }\n        else{\n\n        }\n    } \n\n    const[startTime, setStartTime] = useState([\n        {time: 45, id: 1},\n        {time: 45, id: 2},\n        {time: 45, id: 3}\n    ])\n\n    //const [time1, setTime1] = useState(time)\n    \n   //fetch data from backend\n   useEffect(()=> {\n       fetch('http://127.0.0.1:8000/api/workout/')\n        .then(res => {\n           return res.json();\n        })\n        .then(data => {\n            console.log(data)\n            setExerciseBank(data)\n        })\n   }, []);\n\n    //onload, exercises are not displayed\n    const [showResults, setShowResults] = useState(false)\n\n    //once submit button is changed, exercises are loaded up based on given values\n    const changeDisplay = (num, level, focus) => {\n        console.log(\"Changing exercise list to: \" + num + level + focus)\n        //first button click reveals this group of components \n        setShowResults(true)\n        \n        //scroll to exercises when button is clicked\n        window.scrollTo(0, myRef.current.offsetTop);\n\n        var focusID = null\n        if (focus === 'upper'){\n            focusID = 1\n        }\n        if (focus === 'legs'){\n            focusID = 2\n        }\n        if (focus === 'cardio'){\n            focusID = 3\n        }\n        if (focus === 'abs'){\n            focusID = 4\n        }\n\n        console.log(exercises)\n        var newExerciseBank = exerciseBank\n        if (focus != 'fullBody'){\n            newExerciseBank = exerciseBank.filter(exercise => exercise.focus === focusID)\n        }\n        console.log(\"newBank1: \", newExerciseBank)\n        if (focus!= 'abs'){\n            newExerciseBank = newExerciseBank.filter(exercise => exercise.level <= level)\n        }\n        console.log(\"newBank2: \", newExerciseBank)\n\n        let newExercises = []\n        let added = new Map()\n        for (let i = 0; i<num; i++){\n            let random = Math.floor(Math.random()*newExerciseBank.length)\n            if (newExerciseBank.length > time) {\n                while (added[random] === 1){\n                random =Math.floor(Math.random()*newExerciseBank.length)\n                }\n            }\n            newExercises.push(newExerciseBank[random])\n            added[random] = 1\n            }\n        console.log(newExercises)\n        setExercises(newExercises);\n        \n    }\n\n    if (exercises != null){\n        if (exercises.length > 0){\n            var id = exercises[0].id;\n        }\n        else{\n            var id = null\n        }\n    }\n\n    return(\n        <div>\n            <button className=\"submitButton\" onClick={()=> changeDisplay(num, level, focus)} style={{marginLeft: '45%'}}> Let's Go!</button>\n            <div ref={myRef}> {showResults ? <Stopwatch startTime = {startTime} id={id} handleDelete={handleDelete} /> : null} </div>\n            <div> {showResults ? <h1> Num Exercises: {num} Focus: {focus} Level: {level}</h1> : null}</div>\n            {exercises && <div> {showResults? <Exercises Exercises = {exercises} handleDelete={handleDelete}/> : null} </div>}\n        </div>\n    );\n}\nexport default ExerciseDisplay;"]},"metadata":{},"sourceType":"module"}