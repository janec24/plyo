{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jane_c24/Documents/Projects/plyo/frontend/src/Progress.js\",\n    _s = $RefreshSig$();\n\nimport TimerDisplay from './TimerDisplay';\nimport TimerButton from './TimerButton';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport useSound from 'use-sound';\nimport beep from './beep.wav';\n\nconst Progress = ({\n  newTime,\n  id,\n  current,\n  handleDelete,\n  sets,\n  setCounter,\n  currNum,\n  increaseSets,\n  allCurrentExercises\n}) => {\n  _s();\n\n  const [timer, setTimer] = useState({\n    ms: 0,\n    s: newTime,\n    m: 0,\n    h: 0\n  });\n  const [interv, setInterv] = useState();\n  const [status, setStatus] = useState(0);\n  const [totalSets, setTotalSets] = useState(0);\n  const [numDone, setNumDone] = useState(1); //Status 0 : waiting\n  //Status 1: running\n  //Status 2: stopped\n\n  const start = () => {\n    run();\n    setStatus(1);\n    setInterv(setInterval(run, 10));\n  };\n\n  var updatedMs = timer.ms;\n  var updatedS = timer.s;\n  var updatedM = timer.m;\n  var updatedH = timer.h; //Checks if timer has reached 0 -> if so, resets timer and deletes most recent exercise\n\n  useEffect(() => {\n    if (updatedMs === 0 && updatedS === 0 && updatedM === 0 & updatedH === 0) {\n      play();\n      reset();\n      handleDelete(id, numDone, allCurrentExercises);\n      setNumDone(numDone + 1);\n\n      if (numDone === currNum) {\n        increaseSets();\n        setNumDone(1);\n      }\n    }\n  });\n  useEffect(() => {\n    setTimer({\n      ms: 0,\n      s: newTime,\n      m: 0,\n      h: 0\n    });\n  }, [newTime]);\n  useEffect(() => {\n    setTotalSets(sets);\n  }, [sets]); //for continuously running timer: \n\n  const [play] = useSound(beep); //Decrements every ms\n\n  const run = () => {\n    if (updatedM === 0) {\n      if (updatedH > 0) {\n        updatedH--;\n        updatedM = 59;\n      }\n    }\n\n    if (updatedS === 0) {\n      if (updatedM > 0) {\n        updatedM--;\n        updatedS = 59;\n      }\n    }\n\n    if (updatedMs === 0) {\n      if (updatedS > 0) {\n        updatedS--;\n        updatedMs = 99;\n      }\n    }\n\n    updatedMs--; //console.log(\"timeron\")\n\n    return setTimer({\n      ms: updatedMs,\n      s: updatedS,\n      m: updatedM,\n      h: updatedH\n    });\n  };\n\n  const stop = () => {\n    clearInterval(interv);\n    setStatus(2);\n    console.log(\"Timer Stopped\");\n  };\n\n  const reset = () => {\n    clearInterval(interv);\n    setStatus(0);\n    setTimer({\n      ms: 0,\n      s: 5,\n      m: 0,\n      h: 0\n    });\n    console.log(timer, interv, status);\n  };\n\n  const resume = () => start();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", current == null ? console.log(\"no more exercises\") : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"set-counter\",\n          children: [\" Sets: \", setCounter, \" / \", totalSets, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"exercise-counter\",\n          children: [\" Exercise: \", numDone, \" / \", currNum, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", current.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TimerDisplay, {\n        timer: timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TimerButton, {\n        start: start,\n        status: status,\n        stop: stop,\n        reset: reset,\n        resume: resume,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 68\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Progress, \"3Gwn1zaWv21PLrSkTCkPsgMPc6g=\", false, function () {\n  return [useSound];\n});\n\n_c = Progress;\nexport default Progress;\n\nvar _c;\n\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"sources":["/Users/jane_c24/Documents/Projects/plyo/frontend/src/Progress.js"],"names":["TimerDisplay","TimerButton","useState","useEffect","useSound","beep","Progress","newTime","id","current","handleDelete","sets","setCounter","currNum","increaseSets","allCurrentExercises","timer","setTimer","ms","s","m","h","interv","setInterv","status","setStatus","totalSets","setTotalSets","numDone","setNumDone","start","run","setInterval","updatedMs","updatedS","updatedM","updatedH","play","reset","stop","clearInterval","console","log","resume","name"],"mappings":"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","sourcesContent":["import TimerDisplay from './TimerDisplay'\nimport TimerButton from './TimerButton'\nimport {useState} from 'react';\nimport {useEffect} from 'react';\nimport useSound from 'use-sound';\nimport beep from './beep.wav'\n\nconst Progress = ({newTime, id, current, handleDelete, sets, setCounter, currNum, increaseSets, allCurrentExercises}) => {\n    const [timer, setTimer] = useState({ms: 0, s: newTime, m:0, h:0});\n    const [interv, setInterv] = useState();\n    const [status, setStatus] = useState(0);\n    const [totalSets, setTotalSets] = useState(0);\n    const [numDone, setNumDone] = useState(1)\n    //Status 0 : waiting\n    //Status 1: running\n    //Status 2: stopped\n\n    const start = () => {\n        run();\n        setStatus(1);\n        setInterv(setInterval(run, 10));\n    }\n\n    var updatedMs = timer.ms\n    var updatedS = timer.s\n    var updatedM = timer.m\n    var updatedH = timer.h\n    \n\n    //Checks if timer has reached 0 -> if so, resets timer and deletes most recent exercise\n    useEffect(() => {\n        if (updatedMs === 0 && updatedS === 0 && updatedM === 0 & updatedH === 0){\n            play()\n            reset();\n            handleDelete(id, numDone, allCurrentExercises)\n            setNumDone(numDone+1)\n            if (numDone === currNum){\n                increaseSets()\n                setNumDone(1)\n            }\n        }\n    }\n    )\n\n    useEffect(() => {\n        setTimer({ms: 0, s: newTime, m:0, h:0})\n    }, [newTime] )\n\n    useEffect(()=> {\n        setTotalSets(sets)\n    }, [sets])\n\n\n    //for continuously running timer: \n    \n    const [play] = useSound(beep);\n\n    //Decrements every ms\n    const run = () => {\n        if (updatedM === 0){\n            if (updatedH >0){\n                updatedH--;\n                updatedM = 59;\n            }\n        }\n        if (updatedS === 0){\n            if (updatedM > 0){\n                updatedM --;\n                updatedS = 59;\n            }\n        }\n        if (updatedMs === 0){\n            if (updatedS > 0){\n                updatedS--;\n                updatedMs = 99;\n            }\n        }\n        updatedMs --;\n        //console.log(\"timeron\")\n        return setTimer({ms: updatedMs, s: updatedS, m:updatedM, h:updatedH})\n    }   \n\n    const stop = () => {\n        clearInterval(interv);\n        setStatus(2);\n        console.log(\"Timer Stopped\")\n    }\n\n\n    const reset = () => {\n        clearInterval(interv);\n        setStatus(0);\n        setTimer({ms: 0, s: 5, m:0, h:0})\n        console.log(timer, interv, status);\n    }\n\n    const resume = () => start();\n\n\n    return (\n        <div> {current == null? console.log(\"no more exercises\") : <div className = \"timer-holder\">\n            <div className=\"progress-details\"> \n                <h2 className=\"set-counter\"> Sets: {setCounter} / {totalSets} </h2>\n                <div className=\"progress\"></div>\n                <h2 className=\"exercise-counter\"> Exercise: {numDone} / {currNum} </h2> \n            </div>\n            <h1> {current.name}</h1>\n            \n            <TimerDisplay timer={timer}></TimerDisplay>\n            <TimerButton start={start} status={status} stop={stop} reset={reset} resume={resume}> </TimerButton>\n        </div> }\n        </div>\n    )\n}\n\nexport default Progress"]},"metadata":{},"sourceType":"module"}