{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jane_c24/Documents/Projects/plyo/frontend/src/Stopwatch.js\",\n    _s = $RefreshSig$();\n\nimport TimerDisplay from './TimerDisplay';\nimport TimerButton from './TimerButton';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport useSound from 'use-sound';\nimport beep from './beep.wav';\n\nconst Stopwatch = ({\n  time,\n  id,\n  handleDelete\n}) => {\n  _s();\n\n  const [timer, setTimer] = useState({\n    ms: 0,\n    s: time,\n    m: 0,\n    h: 0\n  });\n  const [interv, setInterv] = useState();\n  const [status, setStatus] = useState(0); //Status 0 : waiting\n  //Status 1: running\n  //Status 2: stopped\n\n  const start = () => {\n    run();\n    setStatus(1);\n    setInterv(setInterval(run, 10));\n  };\n\n  var updatedMs = timer.ms;\n  var updatedS = timer.s;\n  var updatedM = timer.m;\n  var updatedH = timer.h; //Checks if timer has reached 0 -> if so, resets timer and deletes most recent exercise\n\n  useEffect(() => {\n    if (updatedMs === 0 && updatedS === 0 && updatedM === 0 & updatedH === 0) {\n      play();\n      reset();\n      handleDelete(id);\n    }\n  });\n  useEffect(() => {\n    setTimer({\n      ms: 0,\n      s: time,\n      m: 0,\n      h: 0\n    });\n  }, [time]); //for continuously running timer: \n\n  const [play] = useSound(beep); //Decrements every ms\n\n  const run = () => {\n    if (updatedM === 0) {\n      if (updatedH > 0) {\n        updatedH--;\n        updatedM = 59;\n      }\n    }\n\n    if (updatedS === 0) {\n      if (updatedM > 0) {\n        updatedM--;\n        updatedS = 59;\n      }\n    }\n\n    if (updatedMs === 0) {\n      if (updatedS > 0) {\n        updatedS--;\n        updatedMs = 99;\n      }\n    }\n\n    updatedMs--; //console.log(\"timeron\")\n\n    return setTimer({\n      ms: updatedMs,\n      s: updatedS,\n      m: updatedM,\n      h: updatedH\n    });\n  };\n\n  const stop = () => {\n    clearInterval(interv);\n    setStatus(2);\n    console.log(\"Timer Stopped\");\n  };\n\n  const reset = () => {\n    clearInterval(interv);\n    setStatus(0);\n    setTimer({\n      ms: 0,\n      s: 5,\n      m: 0,\n      h: 0\n    });\n    console.log(timer, interv, status);\n  };\n\n  const resume = () => start();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-holder\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimerDisplay, {\n      timer: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimerButton, {\n      start: start,\n      status: status,\n      stop: stop,\n      reset: reset,\n      resume: resume,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Stopwatch, \"O6mFblAr3lop2QuLr0Kq4BwYQC8=\", false, function () {\n  return [useSound];\n});\n\n_c = Stopwatch;\nexport default Stopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"sources":["/Users/jane_c24/Documents/Projects/plyo/frontend/src/Stopwatch.js"],"names":["TimerDisplay","TimerButton","useState","useEffect","useSound","beep","Stopwatch","time","id","handleDelete","timer","setTimer","ms","s","m","h","interv","setInterv","status","setStatus","start","run","setInterval","updatedMs","updatedS","updatedM","updatedH","play","reset","stop","clearInterval","console","log","resume"],"mappings":"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","sourcesContent":["import TimerDisplay from './TimerDisplay'\nimport TimerButton from './TimerButton'\nimport {useState} from 'react';\nimport {useEffect} from 'react';\nimport useSound from 'use-sound';\nimport beep from './beep.wav'\n\nconst Stopwatch = ({time, id, handleDelete}) => {\n    const [timer, setTimer] = useState({ms: 0, s: time, m:0, h:0});\n    const [interv, setInterv] = useState();\n    const [status, setStatus] = useState(0);\n    //Status 0 : waiting\n    //Status 1: running\n    //Status 2: stopped\n\n    const start = () => {\n        run();\n        setStatus(1);\n        setInterv(setInterval(run, 10));\n    }\n\n    var updatedMs = timer.ms\n    var updatedS = timer.s\n    var updatedM = timer.m\n    var updatedH = timer.h\n    \n\n    //Checks if timer has reached 0 -> if so, resets timer and deletes most recent exercise\n    useEffect(() => {\n        if (updatedMs === 0 && updatedS === 0 && updatedM === 0 & updatedH === 0){\n            play()\n            reset();\n            handleDelete(id)\n        }\n    }\n    )\n\n    useEffect(() => {\n        setTimer({ms: 0, s: time, m:0, h:0})\n    }, [time] )\n\n    //for continuously running timer: \n    \n    const [play] = useSound(beep);\n\n    //Decrements every ms\n    const run = () => {\n        if (updatedM === 0){\n            if (updatedH >0){\n                updatedH--;\n                updatedM = 59;\n            }\n        }\n        if (updatedS === 0){\n            if (updatedM > 0){\n                updatedM --;\n                updatedS = 59;\n            }\n        }\n        if (updatedMs === 0){\n            if (updatedS > 0){\n                updatedS--;\n                updatedMs = 99;\n            }\n        }\n        updatedMs --;\n        //console.log(\"timeron\")\n        return setTimer({ms: updatedMs, s: updatedS, m:updatedM, h:updatedH})\n    }   \n\n    const stop = () => {\n        clearInterval(interv);\n        setStatus(2);\n        console.log(\"Timer Stopped\")\n    }\n\n\n    const reset = () => {\n        clearInterval(interv);\n        setStatus(0);\n        setTimer({ms: 0, s: 5, m:0, h:0})\n        console.log(timer, interv, status);\n    }\n\n    const resume = () => start();\n\n\n    return (\n        <div className = \"timer-holder\">\n            <h1> Timer</h1>         \n            <TimerDisplay timer={timer}></TimerDisplay>\n            <TimerButton start={start} status={status} stop={stop} reset={reset} resume={resume}> </TimerButton>\n        </div> \n    )\n}\n\nexport default Stopwatch"]},"metadata":{},"sourceType":"module"}