{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jane_c24/Documents/Projects/plyo/frontend/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport Slider from '@material-ui/core/Slider';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport { styled } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport { blue, blueGrey } from '@material-ui/core/colors';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nconst myButtonGroup = styled(ButtonGroup)({\n  borderColor: 'white',\n  backgroundColor: 'transparent!important'\n});\nconst mySlider = styled(Slider)({\n  color: '#0bc5af'\n});\n\nconst handleClickGo = () => {\n  console.log(\"This is my first function!\");\n};\n\nfunction valuetext(value) {\n  return '{value} min';\n}\n\nconst Form = ({\n  handleSubmit,\n  handleLevel,\n  handleFocus,\n  level,\n  focus\n}) => {\n  _s();\n\n  const [absBackgroundColor, setAbsBackgroundColor] = useState('transparent');\n  /*const changeButton = () => {\n      console.log(\"function running!\")\n      if (backgroundColor === 'transparent'){ \n          setBackgroundColor('blueGrey');\n      }\n      else {\n          setBackgroundColor('transparent');\n      }\n  }*/\n\n  const MyButton = styled(Button)({\n    color: 'white',\n    borderColor: 'white',\n    backgroundColor: 'transparent',\n    marginLeft: '10px'\n  });\n\n  const handleFocusBtn = focus => {\n    handleFocus(focus);\n\n    if (focus === 'abs') {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Focus\", /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        \"aria-label\": \"outlined primary button group\",\n        children: [/*#__PURE__*/_jsxDEV(MyButton, {\n          className: \"abs-btn\",\n          onClick: () => handleFocusBtn('abs'),\n          children: \" Abs \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          className: \"cardio-btn\",\n          onClick: () => handleFocusBtn('cardio'),\n          children: \"Cardio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          className: \"legs-btn\",\n          onClick: () => handleFocusBtn('legs'),\n          children: \"Legs/Glutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          className: \"full-btn\",\n          onClick: () => handleFocusBtn('fullBody'),\n          children: \" Full Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: \"38px\"\n      },\n      children: [\"Level / Intensity\", /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        \"aria-label\": \"outlined primary button group\",\n        children: [/*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: () => handleLevel(1),\n          children: \" Low Impact \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: () => handleLevel(1),\n          children: \" Beginner \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: () => handleLevel(2),\n          children: \" Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: () => handleLevel(3),\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total Time (Minutes)\", /*#__PURE__*/_jsxDEV(Slider, {\n        defaultValue: 5,\n        getAriaValueText: valuetext,\n        onChangeCommitted: (e, value) => handleSubmit(value),\n        \"area-labelledby\": \"discrete-slider\",\n        valueLabelDisplay: \"auto\",\n        step: 5,\n        min: 5,\n        max: 20,\n        style: {\n          width: \"240px\",\n          marginLeft: \"15px\",\n          marginTop: \"30px\",\n          color: \"#06564d\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"challengebutton\",\n      children: \" CHALLENGE MODE!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"DFLt8Fg2lWdZz+iaJNWV6BB37z0=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/jane_c24/Documents/Projects/plyo/frontend/src/Form.js"],"names":["Slider","ButtonGroup","Button","styled","useState","blue","blueGrey","InputLabel","MenuItem","FormHelperText","FormControl","Select","myButtonGroup","borderColor","backgroundColor","mySlider","color","handleClickGo","console","log","valuetext","value","Form","handleSubmit","handleLevel","handleFocus","level","focus","absBackgroundColor","setAbsBackgroundColor","MyButton","marginLeft","handleFocusBtn","marginTop","e","width"],"mappings":"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","sourcesContent":["import Slider from '@material-ui/core/Slider'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button'\nimport { styled } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport { blue, blueGrey } from '@material-ui/core/colors';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst myButtonGroup = styled(ButtonGroup)({\n    borderColor: 'white',\n    backgroundColor: 'transparent!important',\n})\n\nconst mySlider = styled(Slider)({\n    color: '#0bc5af'\n})\n\nconst handleClickGo = () => {\n    console.log(\"This is my first function!\");\n}\n\n\nfunction valuetext(value){\n    return '{value} min'\n}\n\nconst Form = ({handleSubmit, handleLevel, handleFocus, level, focus}) => {\n    const [absBackgroundColor, setAbsBackgroundColor] = useState('transparent');\n\n    /*const changeButton = () => {\n        console.log(\"function running!\")\n        if (backgroundColor === 'transparent'){ \n            setBackgroundColor('blueGrey');\n        }\n        else {\n            setBackgroundColor('transparent');\n        }\n    }*/\n\n    const MyButton = styled(Button)({\n        color: 'white',\n        borderColor: 'white',\n        backgroundColor: 'transparent',\n        marginLeft: '10px',\n    })\n\n    const handleFocusBtn = (focus) => {\n        handleFocus(focus)\n\n        if (focus === 'abs'){\n            \n        }\n    }\n\n    \n\n    return (\n        <div className = \"form\">\n            <h2>Focus\n                <ButtonGroup aria-label=\"outlined primary button group\" >\n                <MyButton className=\"abs-btn\" onClick={() => handleFocusBtn('abs')} > Abs </MyButton>\n                <MyButton className=\"cardio-btn\" onClick={() => handleFocusBtn('cardio')}>Cardio</MyButton>\n                <MyButton className=\"legs-btn\" onClick={() => handleFocusBtn('legs')}>Legs/Glutes</MyButton>\n                <MyButton className=\"full-btn\" onClick={() => handleFocusBtn('fullBody')}> Full Body</MyButton>\n                </ButtonGroup>\n            </h2>\n            \n            <div>{/*\n            <h2> Level/Intensity \n                <FormControl variant=\"outlined\" >\n                <InputLabel id=\"demo-simple-select-outlined-label\">Level</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={level}\n                    onChange={handleLevel}\n                    label=\"Age\"\n                    >\n                    <MenuItem value=\"\">\n                        <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={1}>Beginner</MenuItem>\n                    <MenuItem value={2}>Intermediate</MenuItem>\n                    <MenuItem value={3}>High</MenuItem>\n                    </Select>\n                </FormControl>\n            </h2>*/\n            } </div>\n\n            <h2 style={{marginTop: \"38px\"}}>Level / Intensity\n                <ButtonGroup aria-label=\"outlined primary button group\" >\n                <MyButton onClick={() => handleLevel(1)}> Low Impact </MyButton>\n                <MyButton onClick={() => handleLevel(1)}> Beginner </MyButton>\n                <MyButton onClick={() => handleLevel(2)}> Medium</MyButton>\n                <MyButton onClick={() => handleLevel(3)}>High</MyButton>\n                </ButtonGroup>\n            </h2>\n        \n\n            <h2>Total Time (Minutes)<Slider defaultValue={5} getAriaValueText={valuetext} onChangeCommitted={(e, value)=> handleSubmit(value)} area-labelledby=\"discrete-slider\" valueLabelDisplay=\"auto\" step={5} min={5} max={20} style={{width: \"240px\", marginLeft:\"15px\", marginTop:\"30px\", color: \"#06564d\"}}\n            ></Slider></h2>\n            \n\n            <button className = \"challengebutton\"> CHALLENGE MODE!</button>\n            {/*<button className = \"challengebutton\" style={{marginTop: \"10px\"}} onClick={handleSubmit}> Let's Go!</button>*/}\n        </div>\n      );\n}\n \nexport default Form;"]},"metadata":{},"sourceType":"module"}